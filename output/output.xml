<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.10.11 on win32)" generated="20230531 10:55:07.142" rpa="false" schemaversion="2">
<suite id="s1" name="Tc audit log" source="C:\FMGApps\FMS_Audit_Log_Automation\tests\audit_log\Tc_audit_log.robot">
<kw name="Import Library" library="BuiltIn">
<arg>test_code.ImperiumServices</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:08.873" endtime="20230531 10:55:09.346"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>robot.libraries.Process</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.481" endtime="20230531 10:55:09.481"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>SeleniumLibrary</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.481" endtime="20230531 10:55:09.481"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>DebugLibrary</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.481" endtime="20230531 10:55:09.641"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>DatabaseLibrary</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.641" endtime="20230531 10:55:09.656"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>test_code.RobotEyes</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.656" endtime="20230531 10:55:09.656"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>test_code.Environment</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.671" endtime="20230531 10:55:09.671"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>test_code.Services</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.671" endtime="20230531 10:55:09.671"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>test_code.Imperium</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<status status="PASS" starttime="20230531 10:55:09.671" endtime="20230531 10:55:09.671"/>
</kw>
<test id="s1-t1" name="TC_001_Verify_all_elements_in Simple_Search">
<kw name="Go to Google" library="Utilities_Keywords" type="SETUP">
<kw name="Open Link" library="test_code.Imperium">
<arg>${URL}</arg>
<arg>${TITLE}</arg>
<arg>in_docker=${False}</arg>
<doc>Open link</doc>
<kw name="Open Link In Browser" library="test_code.Services">
<arg>https://google.com</arg>
<arg>Google</arg>
<arg>local</arg>
<doc>OPEN link in browser</doc>
<kw name="Register Keyword To Run On Failure" library="SeleniumLibrary">
<arg>None</arg>
<doc>Sets the keyword to execute, when a SeleniumLibrary keyword fails.</doc>
<msg timestamp="20230531 10:55:09.701" level="INFO">No keyword will be run on failure.</msg>
<status status="PASS" starttime="20230531 10:55:09.701" endtime="20230531 10:55:09.701"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>C:/FMGApps/FMS_Audit_Log_Automation/output/screenshots</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20230531 10:55:09.701" endtime="20230531 10:55:09.701"/>
</kw>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<arg>2</arg>
<doc>Sets the timeout that is used by various keywords.</doc>
<status status="PASS" starttime="20230531 10:55:09.701" endtime="20230531 10:55:09.701"/>
</kw>
<msg timestamp="20230531 10:55:09.701" level="INFO">Opening browser 'chrome' to base url 'https://google.com'.</msg>
<msg timestamp="20230531 10:55:09.716" level="DEBUG">Started executable: `C:/FMGApps/FMS_Audit_Log_Automation/drivers/chromedriver.exe` in a child process with pid: 1864</msg>
<msg timestamp="20230531 10:55:10.241" level="DEBUG">POST http://localhost:59601/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": ["--disable-dev-shm-usage", "ignore-certificate-errors", "--disable-site-isolation-trials", "--disable-web-security", "add_experimental_option(\"excludeSwitches\",[\"ignore-certificate-errors\"])"]}}}}</msg>
<msg timestamp="20230531 10:55:10.241" level="DEBUG">Starting new HTTP connection (1): localhost:59601</msg>
<msg timestamp="20230531 10:55:11.694" level="DEBUG">http://localhost:59601 "POST /session HTTP/1.1" 200 858</msg>
<msg timestamp="20230531 10:55:11.695" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"113.0.5672.127","chrome":{"chromedriverVersion":"113.0.5672.63 (0e1a4471d5ae5bf128b1bd8f4d627c8cbd55f70c-refs/branch-heads/5672@{#912})","userDataDir":"C:\\Users\\v3848\\AppData\\Local\\Temp\\scoped_dir1864_234663239"},"goog:chromeOptions":{"debuggerAddress":"localhost:59604"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"4e5862e521a29a3bc12f64cfd68cda23"}} | headers=HTTPHeaderDict({'Content-Length': '858', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:11.695" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:11.695" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/timeouts {"script": 2000}</msg>
<msg timestamp="20230531 10:55:11.696" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:11.697" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:11.697" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:11.697" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/timeouts {"implicit": 0}</msg>
<msg timestamp="20230531 10:55:11.698" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:11.698" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:11.698" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:11.698" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/url {"url": "https://google.com"}</msg>
<msg timestamp="20230531 10:55:12.954" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/url HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:12.955" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:12.955" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:12.955" level="DEBUG">Opened browser with session id 4e5862e521a29a3bc12f64cfd68cda23.</msg>
<msg timestamp="20230531 10:55:12.956" level="DEBUG">GET http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/title {}</msg>
<msg timestamp="20230531 10:55:12.969" level="DEBUG">http://localhost:59601 "GET /session/4e5862e521a29a3bc12f64cfd68cda23/title HTTP/1.1" 200 18</msg>
<msg timestamp="20230531 10:55:12.970" level="DEBUG">Remote response: status=200 | data={"value":"Google"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:12.970" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:12.970" level="INFO">Page title is 'Google'.</msg>
<kw name="Register Keyword To Run On Failure" library="SeleniumLibrary">
<arg>Capture Page Screenshot</arg>
<doc>Sets the keyword to execute, when a SeleniumLibrary keyword fails.</doc>
<msg timestamp="20230531 10:55:12.971" level="INFO">Capture Page Screenshot will be run on failure.</msg>
<status status="PASS" starttime="20230531 10:55:12.970" endtime="20230531 10:55:12.971"/>
</kw>
<msg timestamp="20230531 10:55:12.982" level="INFO">${BROWSER_OPENED} = True</msg>
<status status="PASS" starttime="20230531 10:55:09.701" endtime="20230531 10:55:12.982"/>
</kw>
<kw name="Open Eyes" library="test_code.RobotEyes">
<arg>SeleniumLibrary</arg>
<arg>0</arg>
<arg>None</arg>
<arg>None</arg>
<arg>None</arg>
<msg timestamp="20230531 10:55:12.994" level="DEBUG">roboteyestestfolder: TC_001_Verify_all_elements_in_Simple_Search</msg>
<status status="PASS" starttime="20230531 10:55:12.989" endtime="20230531 10:55:12.994"/>
</kw>
<status status="PASS" starttime="20230531 10:55:09.701" endtime="20230531 10:55:12.995"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<msg timestamp="20230531 10:55:12.996" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/window/maximize {}</msg>
<msg timestamp="20230531 10:55:13.111" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/window/maximize HTTP/1.1" 200 51</msg>
<msg timestamp="20230531 10:55:13.111" level="DEBUG">Remote response: status=200 | data={"value":{"height":744,"width":1382,"x":-8,"y":-8}} | headers=HTTPHeaderDict({'Content-Length': '51', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:13.111" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:12.995" endtime="20230531 10:55:13.111"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230531 10:55:18.115" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230531 10:55:13.111" endtime="20230531 10:55:18.115"/>
</kw>
<status status="PASS" starttime="20230531 10:55:09.686" endtime="20230531 10:55:18.115"/>
</kw>
<kw name="Verify Of All Elements In Audit Query Search">
<kw name="Verification Of All Elements In Audit Query Search" library="auditlog">
<doc>Verification Of All Elements In Audit Query Search</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>name:q</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<msg timestamp="20230531 10:55:18.115" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"q\"]"}</msg>
<msg timestamp="20230531 10:55:18.130" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230531 10:55:18.130" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3087CA3DDFB68D47B45045DE516AB224_element_2"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:18.130" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:18.115" endtime="20230531 10:55:18.130"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>name:q</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230531 10:55:18.130" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"q\"]"}</msg>
<msg timestamp="20230531 10:55:18.142" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230531 10:55:18.142" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3087CA3DDFB68D47B45045DE516AB224_element_2"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:18.143" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:18.143" level="INFO">Current page contains element 'name:q'.</msg>
<status status="PASS" starttime="20230531 10:55:18.130" endtime="20230531 10:55:18.143"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>name:w</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<msg timestamp="20230531 10:55:18.144" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:18.155" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:18.155" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:18.155" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:18.359" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:18.359" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:18.359" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:18.359" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:18.569" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:18.569" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:18.569" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:18.569" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:18.779" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:18.779" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:18.779" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:18.779" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:18.989" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:18.989" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:18.989" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:18.989" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:19.199" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:19.206" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:19.206" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:19.206" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:19.414" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:19.414" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:19.414" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:19.414" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:19.624" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:19.624" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:19.624" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:19.624" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:19.826" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:19.826" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:19.826" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:19.826" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:20.029" level="DEBUG">POST http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/elements {"using": "css selector", "value": "[name=\"w\"]"}</msg>
<msg timestamp="20230531 10:55:20.029" level="DEBUG">http://localhost:59601 "POST /session/4e5862e521a29a3bc12f64cfd68cda23/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230531 10:55:20.029" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:20.029" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:20.239" level="DEBUG">GET http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23/screenshot {}</msg>
<msg timestamp="20230531 10:55:20.300" level="DEBUG">http://localhost:59601 "GET /session/4e5862e521a29a3bc12f64cfd68cda23/screenshot HTTP/1.1" 200 60792</msg>
<msg timestamp="20230531 10:55:20.300" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '60792', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:20.301" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:20.304" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-1.png"&gt;&lt;img src="screenshots/selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230531 10:55:20.306" level="FAIL">Element 'name:w' did not appear in 2 seconds.</msg>
<msg timestamp="20230531 10:55:20.307" level="DEBUG">Traceback (most recent call last):
  File "C:\FMGApps\FMS_Audit_Log_Automation\venv\lib\site-packages\SeleniumLibrary\__init__.py", line 496, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "C:\FMGApps\FMS_Audit_Log_Automation\venv\lib\site-packages\robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "C:\FMGApps\FMS_Audit_Log_Automation\venv\lib\site-packages\SeleniumLibrary\keywords\waiting.py", line 247, in wait_until_page_contains_element
    return self._wait_until(
  File "C:\FMGApps\FMS_Audit_Log_Automation\venv\lib\site-packages\SeleniumLibrary\keywords\waiting.py", line 426, in _wait_until
    self._wait_until_worker(condition, timeout, error)
  File "C:\FMGApps\FMS_Audit_Log_Automation\venv\lib\site-packages\SeleniumLibrary\keywords\waiting.py", line 443, in _wait_until_worker
    raise AssertionError(not_found or error)</msg>
<status status="FAIL" starttime="20230531 10:55:18.143" endtime="20230531 10:55:20.307"/>
</kw>
<status status="FAIL" starttime="20230531 10:55:18.115" endtime="20230531 10:55:20.307"/>
</kw>
<status status="FAIL" starttime="20230531 10:55:18.115" endtime="20230531 10:55:20.308"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20230531 10:55:20.309" level="INFO">Log level changed from DEBUG to INFO.</msg>
<status status="PASS" starttime="20230531 10:55:20.309" endtime="20230531 10:55:20.309"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230531 10:55:20.375" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-2.png"&gt;&lt;img src="screenshots/selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230531 10:55:20.310" endtime="20230531 10:55:20.375"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>DEBUG</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20230531 10:55:20.375" level="INFO">Log level changed from INFO to DEBUG.</msg>
<status status="PASS" starttime="20230531 10:55:20.375" endtime="20230531 10:55:20.375"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<msg timestamp="20230531 10:55:20.375" level="DEBUG">Closing browser with session id 4e5862e521a29a3bc12f64cfd68cda23.</msg>
<msg timestamp="20230531 10:55:20.375" level="DEBUG">DELETE http://localhost:59601/session/4e5862e521a29a3bc12f64cfd68cda23 {}</msg>
<msg timestamp="20230531 10:55:20.480" level="DEBUG">http://localhost:59601 "DELETE /session/4e5862e521a29a3bc12f64cfd68cda23 HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:20.480" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:20.495" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:20.375" endtime="20230531 10:55:22.635"/>
</kw>
<kw name="Stop All Services" library="test_code.Services">
<doc>Stop all services started. if 'skip_error_check_in_log' set True then log file
will not be checked for error.</doc>
<status status="PASS" starttime="20230531 10:55:22.635" endtime="20230531 10:55:22.635"/>
</kw>
<tag>FMS_Regression</tag>
<tag>Regression</tag>
<tag>test</tag>
<status status="FAIL" starttime="20230531 10:55:09.686" endtime="20230531 10:55:20.308">Element 'name:w' did not appear in 2 seconds.</status>
</test>
<test id="s1-t2" name="TC_002_Simple example Search_Smoke">
<kw name="Go to Google" library="Utilities_Keywords" type="SETUP">
<kw name="Open Link" library="test_code.Imperium">
<arg>${URL}</arg>
<arg>${TITLE}</arg>
<arg>in_docker=${False}</arg>
<doc>Open link</doc>
<kw name="Open Link In Browser" library="test_code.Services">
<arg>https://google.com</arg>
<arg>Google</arg>
<arg>local</arg>
<doc>OPEN link in browser</doc>
<kw name="Register Keyword To Run On Failure" library="SeleniumLibrary">
<arg>None</arg>
<doc>Sets the keyword to execute, when a SeleniumLibrary keyword fails.</doc>
<msg timestamp="20230531 10:55:22.650" level="INFO">No keyword will be run on failure.</msg>
<status status="PASS" starttime="20230531 10:55:22.650" endtime="20230531 10:55:22.650"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>C:/FMGApps/FMS_Audit_Log_Automation/output/screenshots</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20230531 10:55:22.650" endtime="20230531 10:55:22.650"/>
</kw>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<arg>2</arg>
<doc>Sets the timeout that is used by various keywords.</doc>
<status status="PASS" starttime="20230531 10:55:22.650" endtime="20230531 10:55:22.650"/>
</kw>
<msg timestamp="20230531 10:55:22.650" level="INFO">Opening browser 'chrome' to base url 'https://google.com'.</msg>
<msg timestamp="20230531 10:55:22.665" level="DEBUG">Started executable: `C:/FMGApps/FMS_Audit_Log_Automation/drivers/chromedriver.exe` in a child process with pid: 4180</msg>
<msg timestamp="20230531 10:55:23.184" level="DEBUG">POST http://localhost:59628/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": ["--disable-dev-shm-usage", "ignore-certificate-errors", "--disable-site-isolation-trials", "--disable-web-security", "add_experimental_option(\"excludeSwitches\",[\"ignore-certificate-errors\"])"]}}}}</msg>
<msg timestamp="20230531 10:55:23.184" level="DEBUG">Starting new HTTP connection (1): localhost:59628</msg>
<msg timestamp="20230531 10:55:24.551" level="DEBUG">http://localhost:59628 "POST /session HTTP/1.1" 200 859</msg>
<msg timestamp="20230531 10:55:24.551" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"113.0.5672.127","chrome":{"chromedriverVersion":"113.0.5672.63 (0e1a4471d5ae5bf128b1bd8f4d627c8cbd55f70c-refs/branch-heads/5672@{#912})","userDataDir":"C:\\Users\\v3848\\AppData\\Local\\Temp\\scoped_dir4180_1819811979"},"goog:chromeOptions":{"debuggerAddress":"localhost:59631"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"f080633ac8f929faecc29baaa763a50e"}} | headers=HTTPHeaderDict({'Content-Length': '859', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:24.552" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:24.552" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/timeouts {"script": 2000}</msg>
<msg timestamp="20230531 10:55:24.553" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:24.553" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:24.553" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:24.553" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/timeouts {"implicit": 0}</msg>
<msg timestamp="20230531 10:55:24.554" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:24.555" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:24.555" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:24.555" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/url {"url": "https://google.com"}</msg>
<msg timestamp="20230531 10:55:26.005" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/url HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:26.006" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:26.006" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:26.006" level="DEBUG">Opened browser with session id f080633ac8f929faecc29baaa763a50e.</msg>
<msg timestamp="20230531 10:55:26.006" level="DEBUG">GET http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/title {}</msg>
<msg timestamp="20230531 10:55:26.012" level="DEBUG">http://localhost:59628 "GET /session/f080633ac8f929faecc29baaa763a50e/title HTTP/1.1" 200 18</msg>
<msg timestamp="20230531 10:55:26.012" level="DEBUG">Remote response: status=200 | data={"value":"Google"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:26.012" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:26.012" level="INFO">Page title is 'Google'.</msg>
<kw name="Register Keyword To Run On Failure" library="SeleniumLibrary">
<arg>Capture Page Screenshot</arg>
<doc>Sets the keyword to execute, when a SeleniumLibrary keyword fails.</doc>
<msg timestamp="20230531 10:55:26.014" level="INFO">Capture Page Screenshot will be run on failure.</msg>
<status status="PASS" starttime="20230531 10:55:26.013" endtime="20230531 10:55:26.014"/>
</kw>
<msg timestamp="20230531 10:55:26.021" level="INFO">${BROWSER_OPENED} = True</msg>
<status status="PASS" starttime="20230531 10:55:22.650" endtime="20230531 10:55:26.021"/>
</kw>
<kw name="Open Eyes" library="test_code.RobotEyes">
<arg>SeleniumLibrary</arg>
<arg>0</arg>
<arg>None</arg>
<arg>None</arg>
<arg>None</arg>
<msg timestamp="20230531 10:55:26.028" level="DEBUG">roboteyestestfolder: TC_002_Simple_example_Search_Smoke</msg>
<status status="PASS" starttime="20230531 10:55:26.024" endtime="20230531 10:55:26.028"/>
</kw>
<status status="PASS" starttime="20230531 10:55:22.650" endtime="20230531 10:55:26.029"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<msg timestamp="20230531 10:55:26.030" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/window/maximize {}</msg>
<msg timestamp="20230531 10:55:26.154" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/window/maximize HTTP/1.1" 200 51</msg>
<msg timestamp="20230531 10:55:26.154" level="DEBUG">Remote response: status=200 | data={"value":{"height":744,"width":1382,"x":-8,"y":-8}} | headers=HTTPHeaderDict({'Content-Length': '51', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:26.154" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:26.030" endtime="20230531 10:55:26.154"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230531 10:55:31.169" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230531 10:55:26.154" endtime="20230531 10:55:31.169"/>
</kw>
<status status="PASS" starttime="20230531 10:55:22.635" endtime="20230531 10:55:31.169"/>
</kw>
<kw name="Simple Search" library="Utilities_Keywords">
<arg>FMG</arg>
<kw name="Demo" library="auditlog">
<arg>name:q</arg>
<arg>${SearchWord}</arg>
<doc>Demo</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>name:q</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<msg timestamp="20230531 10:55:31.169" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/elements {"using": "css selector", "value": "[name=\"q\"]"}</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3796D2407B869A618CDFEF0BE5C18647_element_2"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:31.169" endtime="20230531 10:55:31.184"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>name:q</arg>
<arg>CTRL+A+DELETE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20230531 10:55:31.184" level="INFO">Sending key(s) ('CTRL+A+DELETE',) to name:q element.</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/elements {"using": "css selector", "value": "[name=\"q\"]"}</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3796D2407B869A618CDFEF0BE5C18647_element_2"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:31.184" level="DEBUG">Workaround for Selenium 3 bug.</msg>
<msg timestamp="20230531 10:55:31.199" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/actions {"actions": [{"type": "pointer", "parameters": {"pointerType": "mouse"}, "id": "mouse", "actions": [{"type": "pointerMove", "duration": 250, "x": 0, "y": 0, "origin": {"element-6066-11e4-a52e-4f735466cecf": "3796D2407B869A618CDFEF0BE5C18647_element_2"}}, {"type": "pointerDown", "duration": 0, "button": 0}, {"type": "pointerUp", "duration": 0, "button": 0}]}, {"type": "key", "id": "key", "actions": [{"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}]}]}</msg>
<msg timestamp="20230531 10:55:31.512" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/actions HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:31.512" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.512" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:31.512" level="INFO">Pressing special key CONTROL down.</msg>
<msg timestamp="20230531 10:55:31.512" level="INFO">Sending key A</msg>
<msg timestamp="20230531 10:55:31.512" level="INFO">Pressing special key DELETE down.</msg>
<msg timestamp="20230531 10:55:31.512" level="INFO">Releasing special key CONTROL.</msg>
<msg timestamp="20230531 10:55:31.513" level="INFO">Releasing special key DELETE.</msg>
<msg timestamp="20230531 10:55:31.513" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/actions {"actions": [{"type": "pointer", "parameters": {"pointerType": "mouse"}, "id": "mouse", "actions": [{"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}]}, {"type": "key", "id": "key", "actions": [{"type": "keyDown", "value": "\ue009"}, {"type": "keyDown", "value": "A"}, {"type": "keyUp", "value": "A"}, {"type": "keyDown", "value": "\ue017"}, {"type": "keyUp", "value": "\ue009"}, {"type": "keyUp", "value": "\ue017"}]}]}</msg>
<msg timestamp="20230531 10:55:31.524" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/actions HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:31.525" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.525" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:31.184" endtime="20230531 10:55:31.525"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>name:q</arg>
<arg>FMG</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230531 10:55:31.526" level="INFO">Typing text 'FMG' into text field 'name:q'.</msg>
<msg timestamp="20230531 10:55:31.526" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/elements {"using": "css selector", "value": "[name=\"q\"]"}</msg>
<msg timestamp="20230531 10:55:31.533" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230531 10:55:31.533" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3796D2407B869A618CDFEF0BE5C18647_element_2"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.533" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:31.533" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/element/3796D2407B869A618CDFEF0BE5C18647_element_2/clear {"id": "3796D2407B869A618CDFEF0BE5C18647_element_2"}</msg>
<msg timestamp="20230531 10:55:31.563" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/element/3796D2407B869A618CDFEF0BE5C18647_element_2/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:31.563" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.563" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:31.563" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/element/3796D2407B869A618CDFEF0BE5C18647_element_2/value {"text": "FMG", "value": ["F", "M", "G"], "id": "3796D2407B869A618CDFEF0BE5C18647_element_2"}</msg>
<msg timestamp="20230531 10:55:31.610" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/element/3796D2407B869A618CDFEF0BE5C18647_element_2/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:31.610" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.610" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:31.525" endtime="20230531 10:55:31.610"/>
</kw>
<status status="PASS" starttime="20230531 10:55:31.169" endtime="20230531 10:55:31.611"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>name:q</arg>
<arg>ENTER</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20230531 10:55:31.612" level="INFO">Sending key(s) ('ENTER',) to name:q element.</msg>
<msg timestamp="20230531 10:55:31.612" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/elements {"using": "css selector", "value": "[name=\"q\"]"}</msg>
<msg timestamp="20230531 10:55:31.621" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230531 10:55:31.621" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3796D2407B869A618CDFEF0BE5C18647_element_2"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.621" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:31.621" level="DEBUG">Workaround for Selenium 3 bug.</msg>
<msg timestamp="20230531 10:55:31.622" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/actions {"actions": [{"type": "pointer", "parameters": {"pointerType": "mouse"}, "id": "mouse", "actions": [{"type": "pointerMove", "duration": 250, "x": 0, "y": 0, "origin": {"element-6066-11e4-a52e-4f735466cecf": "3796D2407B869A618CDFEF0BE5C18647_element_2"}}, {"type": "pointerDown", "duration": 0, "button": 0}, {"type": "pointerUp", "duration": 0, "button": 0}]}, {"type": "key", "id": "key", "actions": [{"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}]}]}</msg>
<msg timestamp="20230531 10:55:31.894" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/actions HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:31.894" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:31.894" level="DEBUG">Finished Request</msg>
<msg timestamp="20230531 10:55:31.895" level="INFO">Pressing special key ENTER to element.</msg>
<msg timestamp="20230531 10:55:31.895" level="INFO">Releasing special key ENTER.</msg>
<msg timestamp="20230531 10:55:31.895" level="DEBUG">POST http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e/actions {"actions": [{"type": "pointer", "parameters": {"pointerType": "mouse"}, "id": "mouse", "actions": [{"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}, {"type": "pause", "duration": 0}]}, {"type": "key", "id": "key", "actions": [{"type": "keyDown", "value": "\ue007"}, {"type": "keyUp", "value": "\ue007"}, {"type": "keyUp", "value": "\ue007"}]}]}</msg>
<msg timestamp="20230531 10:55:34.535" level="DEBUG">http://localhost:59628 "POST /session/f080633ac8f929faecc29baaa763a50e/actions HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:34.535" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:34.535" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:31.611" endtime="20230531 10:55:34.535"/>
</kw>
<status status="PASS" starttime="20230531 10:55:31.169" endtime="20230531 10:55:34.536"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<msg timestamp="20230531 10:55:34.538" level="DEBUG">Closing browser with session id f080633ac8f929faecc29baaa763a50e.</msg>
<msg timestamp="20230531 10:55:34.539" level="DEBUG">DELETE http://localhost:59628/session/f080633ac8f929faecc29baaa763a50e {}</msg>
<msg timestamp="20230531 10:55:34.629" level="DEBUG">http://localhost:59628 "DELETE /session/f080633ac8f929faecc29baaa763a50e HTTP/1.1" 200 14</msg>
<msg timestamp="20230531 10:55:34.629" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230531 10:55:34.630" level="DEBUG">Finished Request</msg>
<status status="PASS" starttime="20230531 10:55:34.538" endtime="20230531 10:55:36.845"/>
</kw>
<kw name="Stop All Services" library="test_code.Services">
<doc>Stop all services started. if 'skip_error_check_in_log' set True then log file
will not be checked for error.</doc>
<status status="PASS" starttime="20230531 10:55:36.845" endtime="20230531 10:55:36.845"/>
</kw>
<tag>FMS_Regression</tag>
<tag>Regression</tag>
<tag>test</tag>
<status status="PASS" starttime="20230531 10:55:22.635" endtime="20230531 10:55:34.537"/>
</test>
<kw name="Close All Browsers" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes all open browsers and resets the browser cache.</doc>
<msg timestamp="20230531 10:55:36.845" level="DEBUG">Closing all browsers.</msg>
<status status="PASS" starttime="20230531 10:55:36.845" endtime="20230531 10:55:36.845"/>
</kw>
<kw name="Stop All Services" library="test_code.Services">
<doc>Stop all services started. if 'skip_error_check_in_log' set True then log file
will not be checked for error.</doc>
<status status="PASS" starttime="20230531 10:55:36.845" endtime="20230531 10:55:36.845"/>
</kw>
<doc>test</doc>
<status status="FAIL" starttime="20230531 10:55:07.466" endtime="20230531 10:55:36.845"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">FMS_Regression</stat>
<stat pass="1" fail="1" skip="0">Regression</stat>
<stat pass="1" fail="1" skip="0">test</stat>
</tag>
<suite>
<stat pass="1" fail="1" skip="0" id="s1" name="Tc audit log">Tc audit log</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230531 10:55:07.766" level="ERROR">Error in file 'C:\FMGApps\FMS_Audit_Log_Automation\tests\audit_log\Tc_audit_log.robot' on line 4: Library 'test_code.auditlog.AuditQuerySearch' expected 0 arguments, got 2.</msg>
</errors>
</robot>
